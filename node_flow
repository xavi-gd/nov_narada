[
    {
        "id": "1b5f67f7ad635077",
        "type": "tab",
        "label": "server",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "53913cc9c594968b",
        "type": "mongodb4-client",
        "name": "",
        "protocol": "mongodb",
        "hostname": "localhost",
        "port": "27017",
        "dbName": "narada",
        "appName": "",
        "authSource": "",
        "authMechanism": "DEFAULT",
        "tls": false,
        "tlsCAFile": "",
        "tlsCertificateKeyFile": "",
        "tlsInsecure": false,
        "connectTimeoutMS": "30000",
        "socketTimeoutMS": "0",
        "minPoolSize": "0",
        "maxPoolSize": "100",
        "maxIdleTimeMS": "0",
        "uri": "",
        "advanced": "{}",
        "uriTabActive": "tab-uri-simple"
    },
    {
        "id": "2a94dcf4a197c16a",
        "type": "ui_tab",
        "name": "Tempel Group",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d95c983f646cd4c2",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#ffffff",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#ffffff",
                    "value": "#ffffff",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#808285",
                    "edited": true
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#bcbec0",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#bcbec0",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#000000",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#808285",
                    "edited": true
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 10,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "070aacdfb3088368",
        "type": "ui_group",
        "name": "Fecha y Hora",
        "tab": "2a94dcf4a197c16a",
        "order": 1,
        "disp": true,
        "width": 4,
        "collapse": false,
        "className": ""
    },
    {
        "id": "b3b18b46f769a03f",
        "type": "ui_group",
        "name": "Graficos",
        "tab": "2a94dcf4a197c16a",
        "order": 2,
        "disp": true,
        "width": 18,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3ad2bc4a7ed3c9a3",
        "type": "ui_group",
        "name": "Default",
        "tab": "22c859d636852368",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "22c859d636852368",
        "type": "ui_tab",
        "name": "Away",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "63d44542e6e1ae80",
        "type": "ui_group",
        "name": "Logs de Alarmas",
        "tab": "2a94dcf4a197c16a",
        "order": 3,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4ff41e5b8c1dd25e",
        "type": "ui_tab",
        "name": "Cells",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "26daf5f7e0a21c1c",
        "type": "ui_group",
        "name": "Celdas",
        "tab": "4ff41e5b8c1dd25e",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d0f7f1ce1865f46f",
        "type": "tcp in",
        "z": "1b5f67f7ad635077",
        "name": "server",
        "server": "server",
        "host": "",
        "port": "12345",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 90,
        "y": 320,
        "wires": [
            [
                "8a4b7b641fcecfc8"
            ]
        ]
    },
    {
        "id": "8a4b7b641fcecfc8",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "toASCII",
        "func": "msg.payload = msg.payload.toString(\"ascii\")\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 320,
        "wires": [
            [
                "36c120148f84e607",
                "f336053cd1051fb1"
            ]
        ]
    },
    {
        "id": "36c120148f84e607",
        "type": "json",
        "z": "1b5f67f7ad635077",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 430,
        "y": 320,
        "wires": [
            [
                "0cfb97fd869df32a",
                "94071b19ccea0111"
            ]
        ]
    },
    {
        "id": "04f86d401dec1ed2",
        "type": "mongodb4",
        "z": "1b5f67f7ad635077",
        "clientNode": "53913cc9c594968b",
        "mode": "collection",
        "collection": "datos",
        "operation": "insertMany",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 870,
        "y": 380,
        "wires": [
            [
                "0226e4b052c6765c"
            ]
        ]
    },
    {
        "id": "0cfb97fd869df32a",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "insert_DB_format",
        "func": "msg.payload = [[...msg.payload]];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 380,
        "wires": [
            [
                "04f86d401dec1ed2"
            ]
        ]
    },
    {
        "id": "b796a07a4e821e35",
        "type": "change",
        "z": "1b5f67f7ad635077",
        "name": "set_user_date_context",
        "rules": [
            {
                "t": "set",
                "p": "user_date_ts",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "44b857a76e07d658",
        "type": "mongodb4",
        "z": "1b5f67f7ad635077",
        "clientNode": "53913cc9c594968b",
        "mode": "collection",
        "collection": "datos",
        "operation": "find",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 710,
        "y": 560,
        "wires": [
            [
                "f9aa32fd91fe5564"
            ]
        ]
    },
    {
        "id": "2461d59387e81e70",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "time_range",
        "func": "const user_date_ts = flow.get(\"user_date_ts\")\nconst user_date = new Date(user_date_ts)\n\nconst user_option = msg.topic\nlet am_limit_ts, pm_limit_ts\n\nswitch (flow.get(\"user_time\")) {\n  case 1:\n    am_limit_ts = user_date.setHours(0,0,0)\n    pm_limit_ts = user_date.setHours(5,59,59)\n    break;\n  case 2:\n      am_limit_ts = user_date.setHours(6,0,0)\n      pm_limit_ts = user_date.setHours(11,59,59)\n    break;\n  case 3:\n      am_limit_ts = user_date.setHours(12,0,0)\n      pm_limit_ts = user_date.setHours(17,59,59)\n    break;\n  case 4:\n      am_limit_ts = user_date.setHours(18,0,0)\n      pm_limit_ts = user_date.setHours(23,59,59)\n}\n\nconst time_array = [am_limit_ts/1000, pm_limit_ts/1000]\nmsg.payload = time_array\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 560,
        "wires": [
            [
                "f73f52b903328274"
            ]
        ]
    },
    {
        "id": "f73f52b903328274",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "find_module_query",
        "func": "const user_module = parseInt(msg.topic, 10)\nconst query = [{ id: msg.topic, time: { $gte: msg.payload[0], $lte: msg.payload[1]} }]\nmsg.payload = query\n\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 560,
        "wires": [
            [
                "44b857a76e07d658"
            ]
        ]
    },
    {
        "id": "aaafe02e3461177a",
        "type": "ui_dropdown",
        "z": "1b5f67f7ad635077",
        "name": "",
        "label": "Hora",
        "tooltip": "",
        "place": "Select option",
        "group": "070aacdfb3088368",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "00:00 - 05:59",
                "value": 1,
                "type": "num"
            },
            {
                "label": "06:00 - 11:59",
                "value": 2,
                "type": "num"
            },
            {
                "label": "12:00 - 17:59",
                "value": 3,
                "type": "num"
            },
            {
                "label": "18:00 - 23:59",
                "value": 4,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 490,
        "y": 100,
        "wires": [
            [
                "9f1636ab8f4039d1"
            ]
        ]
    },
    {
        "id": "61a19e2c204088a3",
        "type": "ui_date_picker",
        "z": "1b5f67f7ad635077",
        "name": "",
        "label": "Fecha",
        "group": "070aacdfb3088368",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 90,
        "y": 100,
        "wires": [
            [
                "b796a07a4e821e35"
            ]
        ]
    },
    {
        "id": "1461699dd230f685",
        "type": "ui_table",
        "z": "1b5f67f7ad635077",
        "group": "b3b18b46f769a03f",
        "name": "Tabla",
        "order": 2,
        "width": 18,
        "height": 4,
        "columns": [
            {
                "field": "time",
                "title": "Time",
                "width": "70",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "volt",
                "title": "V",
                "width": "45",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "current",
                "title": "A",
                "width": "45",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "soc",
                "title": "SOC",
                "width": "65",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "soh",
                "title": "SOH",
                "width": "65",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "env_temp",
                "title": "Temp",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "avg_cell_temp",
                "title": "Cell T",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "protection_flag",
                "title": "Protection",
                "width": "",
                "align": "left",
                "formatter": "traffic",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "remain_capacity",
                "title": "Carga",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "charge_time",
                "title": "Carga",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "discharge_time",
                "title": "Desc",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1330,
        "y": 500,
        "wires": []
    },
    {
        "id": "0226e4b052c6765c",
        "type": "ui_button",
        "z": "1b5f67f7ad635077",
        "name": "",
        "group": "070aacdfb3088368",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Buscar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "user_module",
        "topicType": "flow",
        "x": 100,
        "y": 560,
        "wires": [
            [
                "2461d59387e81e70"
            ]
        ]
    },
    {
        "id": "544c25cc5768ce35",
        "type": "ui_dropdown",
        "z": "1b5f67f7ad635077",
        "name": "",
        "label": "Modulos",
        "tooltip": "seleccionar modulo",
        "place": "Select option",
        "group": "070aacdfb3088368",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Todos",
                "value": 37,
                "type": "num"
            },
            {
                "label": "Modulo 1",
                "value": 39,
                "type": "num"
            },
            {
                "label": "Modulo 2",
                "value": 40,
                "type": "num"
            },
            {
                "label": "Modulo 3",
                "value": 41,
                "type": "num"
            },
            {
                "label": "Modulo 4",
                "value": 42,
                "type": "num"
            },
            {
                "label": "Modulo 5",
                "value": 43,
                "type": "num"
            },
            {
                "label": "Modulo 6",
                "value": 44,
                "type": "num"
            },
            {
                "label": "Modulo 7",
                "value": 45,
                "type": "num"
            },
            {
                "label": "Modulo 8",
                "value": 46,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 900,
        "y": 100,
        "wires": [
            [
                "9f29e3120982b9fc"
            ]
        ]
    },
    {
        "id": "9f1636ab8f4039d1",
        "type": "change",
        "z": "1b5f67f7ad635077",
        "name": "set_user_time_context",
        "rules": [
            {
                "t": "set",
                "p": "user_time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "9f29e3120982b9fc",
        "type": "change",
        "z": "1b5f67f7ad635077",
        "name": "set_user_module_context",
        "rules": [
            {
                "t": "set",
                "p": "user_module",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "e3ea095958a28e60",
        "type": "ui_table",
        "z": "1b5f67f7ad635077",
        "group": "63d44542e6e1ae80",
        "name": "Registro de Alarmas",
        "order": 1,
        "width": 8,
        "height": 4,
        "columns": [
            {
                "field": "time",
                "title": "Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "id",
                "title": "ID",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "protection_flag",
                "title": "Protection",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1900,
        "y": 400,
        "wires": []
    },
    {
        "id": "d8bb605fc70b7a21",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "set_module_alarms",
        "func": "let module_alarms = msg.payload.map(({ time, id, protection_flag }) => ({ time, id, protection_flag }));\n\nmsg.payload = module_alarms\n\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 260,
        "wires": [
            [
                "bb2f5f81325c3433",
                "ee3e11782327efe4"
            ]
        ]
    },
    {
        "id": "1b159a12a677bf73",
        "type": "e-mail",
        "z": "1b5f67f7ad635077",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": false,
        "name": "xavier.garrigos.tempelgroup@gmail.com",
        "dname": "",
        "x": 1400,
        "y": 200,
        "wires": []
    },
    {
        "id": "d0d59e1ca522a234",
        "type": "comment",
        "z": "1b5f67f7ad635077",
        "name": "USUARIO",
        "info": "",
        "x": 100,
        "y": 40,
        "wires": []
    },
    {
        "id": "94071b19ccea0111",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "obj_array",
        "func": "msg.payload = [...msg.payload];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 260,
        "wires": [
            [
                "21e32e0ac649e517"
            ]
        ]
    },
    {
        "id": "f9aa32fd91fe5564",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "timestamp_to_date",
        "func": "msg.payload.forEach(module => {\n    let fecha = new Date(module.time * 1000); // Convierte el timestamp a milisegundos\n    let horas = (\"0\" + fecha.getHours()).slice(-2); // Obtiene las horas con dos dígitos\n    let minutos = (\"0\" + fecha.getMinutes()).slice(-2); // Obtiene los minutos con dos dígitos\n    module.time = horas + \":\" + minutos; // Modifica el atributo time con el formato HH:MM\n  })\n\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 560,
        "wires": [
            [
                "e0510c9c976ecb6a"
            ]
        ]
    },
    {
        "id": "21e32e0ac649e517",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "timestamp_to_date",
        "func": "msg.payload.forEach(module => {\n    let fecha = new Date(module.time * 1000); // Convierte el timestamp a milisegundos\n    let horas = (\"0\" + fecha.getHours()).slice(-2); // Obtiene las horas con dos dígitos\n    let minutos = (\"0\" + fecha.getMinutes()).slice(-2); // Obtiene los minutos con dos dígitos\n    module.time = horas + \":\" + minutos; // Modifica el atributo time con el formato HH:MM\n  })\n\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 260,
        "wires": [
            [
                "4fa49c9bbfe372a0"
            ]
        ]
    },
    {
        "id": "bb2f5f81325c3433",
        "type": "change",
        "z": "1b5f67f7ad635077",
        "name": "set_module_alarms_context",
        "rules": [
            {
                "t": "set",
                "p": "module_alarms",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 260,
        "wires": [
            [
                "8dd684cd3bd7a538",
                "ee3e11782327efe4"
            ]
        ]
    },
    {
        "id": "a2d54372103430a0",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "module_chart_data",
        "func": "function set_chart_values(arrayDeArrays) {\n    const volt = [], time = []\n\n    for (const objeto of arrayDeArrays) {\n        volt.push(objeto.volt)\n        time.push(objeto.time)\n    }\n    return [volt, time]\n}\n\nconst user_module = set_chart_values(msg.payload)\n\nmsg.payload=[{\n    \"series\": [\"Volt\"],\n    \"data\": [user_module[0]],\n    \"labels\": [...user_module[1]]\n}]\n\n\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 560,
        "wires": [
            [
                "02fbaa95f0aee342"
            ]
        ]
    },
    {
        "id": "284ffcdc80879529",
        "type": "ui_template",
        "z": "1b5f67f7ad635077",
        "d": true,
        "group": "3ad2bc4a7ed3c9a3",
        "name": "top-bar logo",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n    #top-bar-logo {\n    background-image: url(https://fenie.es/patrocinador/tempel-group/);\n    background-size: contain;\n    background-repeat: no-repeat;\n    background-position: left;\n    height: 100%;\n    width: 100%;\n}\n</style>\n\n<script id=\"logo-script\" type=\"text/javascript\">\nfunction build(){\n    $(\"#top-bar-logo\").remove()\n    var logo = $('<div />').attr(\"id\",\"top-bar-logo\");\n    var topbar = $('.md-toolbar-tools');\n    topbar.append(logo)\n}\nfunction checkExistence(){\n    console.log($(\"#top-bar-logo\"))\n    if($(\"#top-bar-logo\").length > 0){\n        return\n    }\n    build()\n    setTimeout(checkExistence,100)\n}\n\nbuild()\nsetTimeout(checkExistence,100)\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 310,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "e0510c9c976ecb6a",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "fix_int_format",
        "func": "const modules = msg.payload\n\nmodules.forEach(module => {\n    for (let key in module) {\n      if (typeof module[key] == 'number' && !isNaN( module[key])) {\n        module[key] = Number(module[key].toFixed(2))\n      }\n    }\n  })\n\nmsg.payload = modules\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 560,
        "wires": [
            [
                "1461699dd230f685",
                "a2d54372103430a0",
                "a1245120c2032ae4"
            ]
        ]
    },
    {
        "id": "02fbaa95f0aee342",
        "type": "ui_chart",
        "z": "1b5f67f7ad635077",
        "name": "",
        "group": "b3b18b46f769a03f",
        "order": 1,
        "width": 18,
        "height": 9,
        "label": "Voltaje",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1550,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "4fa49c9bbfe372a0",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "pop",
        "func": "msg.payload.pop()\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 260,
        "wires": [
            [
                "d8bb605fc70b7a21"
            ]
        ]
    },
    {
        "id": "0b82e01e401b5d92",
        "type": "file",
        "z": "1b5f67f7ad635077",
        "name": "",
        "filename": "C:\\Users\\BATECNIC01\\Desktop\\logs.txt",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1680,
        "y": 340,
        "wires": [
            [
                "90440482bf60250f",
                "e3ea095958a28e60"
            ]
        ]
    },
    {
        "id": "8dd684cd3bd7a538",
        "type": "file in",
        "z": "1b5f67f7ad635077",
        "name": "",
        "filename": "C:\\Users\\BATECNIC01\\Desktop\\logs.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1220,
        "y": 380,
        "wires": [
            [
                "4055d95245713a0d",
                "50667034f66da734"
            ]
        ]
    },
    {
        "id": "50667034f66da734",
        "type": "debug",
        "z": "1b5f67f7ad635077",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1740,
        "y": 460,
        "wires": []
    },
    {
        "id": "4055d95245713a0d",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "function 1",
        "func": "let final = []\nlet antiguos_str = msg.payload\nlet nuevos = flow.get(\"module_alarms\")\n\nif (antiguos_str !== '') {\n    let antiguos = JSON.parse(antiguos_str)\n    final.push(...antiguos)\n    final.push(...nuevos) \n} else {\n    final.push(...nuevos)\n    flow.set(\"module_alarms\", final)\n}\n\nmsg.payload = final\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 400,
        "wires": [
            [
                "50667034f66da734",
                "0b82e01e401b5d92"
            ]
        ]
    },
    {
        "id": "44459825e3b1e96d",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "function 2",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "ee3e11782327efe4",
        "type": "debug",
        "z": "1b5f67f7ad635077",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1560,
        "y": 100,
        "wires": []
    },
    {
        "id": "90440482bf60250f",
        "type": "debug",
        "z": "1b5f67f7ad635077",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1810,
        "y": 180,
        "wires": []
    },
    {
        "id": "f336053cd1051fb1",
        "type": "debug",
        "z": "1b5f67f7ad635077",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 400,
        "wires": []
    },
    {
        "id": "520d4d0ab82eab9f",
        "type": "ui_chart",
        "z": "1b5f67f7ad635077",
        "name": "",
        "group": "070aacdfb3088368",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1430,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "a1245120c2032ae4",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "function 3",
        "func": "\nmsg.payload = [...msg.payload.cell_volt]\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 640,
        "wires": [
            [
                "520d4d0ab82eab9f"
            ]
        ]
    }
]
