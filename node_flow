[
    {
        "id": "1b5f67f7ad635077",
        "type": "tab",
        "label": "server",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "53913cc9c594968b",
        "type": "mongodb4-client",
        "name": "",
        "protocol": "mongodb",
        "hostname": "localhost",
        "port": "27017",
        "dbName": "narada",
        "appName": "",
        "authSource": "",
        "authMechanism": "DEFAULT",
        "tls": false,
        "tlsCAFile": "",
        "tlsCertificateKeyFile": "",
        "tlsInsecure": false,
        "connectTimeoutMS": "30000",
        "socketTimeoutMS": "0",
        "minPoolSize": "0",
        "maxPoolSize": "100",
        "maxIdleTimeMS": "0",
        "uri": "",
        "advanced": "{}",
        "uriTabActive": "tab-uri-simple"
    },
    {
        "id": "2a94dcf4a197c16a",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d95c983f646cd4c2",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "070aacdfb3088368",
        "type": "ui_group",
        "name": "Fecha y Hora",
        "tab": "2a94dcf4a197c16a",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b3b18b46f769a03f",
        "type": "ui_group",
        "name": "Graficos",
        "tab": "2a94dcf4a197c16a",
        "order": 3,
        "disp": true,
        "width": "15",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d0f7f1ce1865f46f",
        "type": "tcp in",
        "z": "1b5f67f7ad635077",
        "name": "server",
        "server": "server",
        "host": "",
        "port": "12345",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "8a4b7b641fcecfc8"
            ]
        ]
    },
    {
        "id": "8a4b7b641fcecfc8",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "toASCII",
        "func": "msg.payload = msg.payload.toString(\"ascii\")\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 100,
        "wires": [
            [
                "36c120148f84e607"
            ]
        ]
    },
    {
        "id": "36c120148f84e607",
        "type": "json",
        "z": "1b5f67f7ad635077",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 450,
        "y": 100,
        "wires": [
            [
                "0cfb97fd869df32a"
            ]
        ]
    },
    {
        "id": "04f86d401dec1ed2",
        "type": "mongodb4",
        "z": "1b5f67f7ad635077",
        "clientNode": "53913cc9c594968b",
        "mode": "collection",
        "collection": "datos",
        "operation": "insertMany",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 810,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "0cfb97fd869df32a",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "obj_array",
        "func": "msg.payload = [[...msg.payload]];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 100,
        "wires": [
            [
                "04f86d401dec1ed2",
                "bb1fa1246c6d00e6",
                "d8bb605fc70b7a21"
            ]
        ]
    },
    {
        "id": "b796a07a4e821e35",
        "type": "change",
        "z": "1b5f67f7ad635077",
        "name": "set_user_date_context",
        "rules": [
            {
                "t": "set",
                "p": "user_date_ts",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "44b857a76e07d658",
        "type": "mongodb4",
        "z": "1b5f67f7ad635077",
        "clientNode": "53913cc9c594968b",
        "mode": "collection",
        "collection": "datos",
        "operation": "find",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 890,
        "y": 580,
        "wires": [
            [
                "1461699dd230f685",
                "2d5929cd23d4dcd3",
                "aca79a9b73e5e46a"
            ]
        ]
    },
    {
        "id": "2461d59387e81e70",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "time_range",
        "func": "const user_date_ts = flow.get(\"user_date_ts\")\nconst user_date = new Date(user_date_ts)\n\nconst user_option = msg.topic\nlet am_limit_ts, pm_limit_ts\n\nswitch (flow.get(\"user_time\")) {\n  case 1:\n    am_limit_ts = user_date.setHours(0,0,0)\n    pm_limit_ts = user_date.setHours(5,59,59)\n    break;\n  case 2:\n      am_limit_ts = user_date.setHours(6,0,0)\n      pm_limit_ts = user_date.setHours(11,59,59)\n    break;\n  case 3:\n      am_limit_ts = user_date.setHours(12,0,0)\n      pm_limit_ts = user_date.setHours(17,59,59)\n    break;\n  case 4:\n      am_limit_ts = user_date.setHours(18,0,0)\n      pm_limit_ts = user_date.setHours(23,59,59)\n}\n\nconst time_array = [am_limit_ts/1000, pm_limit_ts/1000]\nmsg.payload = time_array\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 500,
        "wires": [
            [
                "7062a1ef523f97a1"
            ]
        ]
    },
    {
        "id": "f73f52b903328274",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "find_module_query",
        "func": "const user_module = parseInt(msg.topic, 10)\nconst query = [{ id: msg.topic, time: { $gte: msg.payload[0], $lte: msg.payload[1]} }]\nmsg.payload = query\nmsg.test = msg.id\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 580,
        "wires": [
            [
                "44b857a76e07d658"
            ]
        ]
    },
    {
        "id": "66c836030df5f49a",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "split_by_id",
        "func": "const modules = msg.payload\nconst volt = [], current = []\nconst labels = []\n\nfunction split_by_id(modules) {\n    const modules_by_id = {}\n\n    modules.forEach((module) => {\n        if (!modules_by_id[module.id]) {\n            modules_by_id[module.id] = [];\n        }\n    modules_by_id[module.id].push(module);\n    })\n\n    return Object.values(modules_by_id);\n}\n\nmsg.payload = split_by_id(modules);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 440,
        "wires": [
            [
                "16acb2a5941ebe61"
            ]
        ]
    },
    {
        "id": "44f274b32a5521f6",
        "type": "ui_chart",
        "z": "1b5f67f7ad635077",
        "name": "",
        "group": "b3b18b46f769a03f",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Grafico",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1480,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "aaafe02e3461177a",
        "type": "ui_dropdown",
        "z": "1b5f67f7ad635077",
        "name": "",
        "label": "Hora",
        "tooltip": "",
        "place": "Select option",
        "group": "070aacdfb3088368",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "00:00 - 05:59",
                "value": 1,
                "type": "num"
            },
            {
                "label": "06:00 - 11:59",
                "value": 2,
                "type": "num"
            },
            {
                "label": "12:00 - 17:59",
                "value": 3,
                "type": "num"
            },
            {
                "label": "18:00 - 23:59",
                "value": 4,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 510,
        "y": 340,
        "wires": [
            [
                "9f1636ab8f4039d1"
            ]
        ]
    },
    {
        "id": "61a19e2c204088a3",
        "type": "ui_date_picker",
        "z": "1b5f67f7ad635077",
        "name": "",
        "label": "Fecha",
        "group": "070aacdfb3088368",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 110,
        "y": 340,
        "wires": [
            [
                "b796a07a4e821e35"
            ]
        ]
    },
    {
        "id": "1461699dd230f685",
        "type": "ui_table",
        "z": "1b5f67f7ad635077",
        "group": "b3b18b46f769a03f",
        "name": "Tabla",
        "order": 2,
        "width": "0",
        "height": "0",
        "columns": [
            {
                "field": "time",
                "title": "Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "soc",
                "title": "soc",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1090,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "16acb2a5941ebe61",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "general_chart_data",
        "func": "function set_chart_values(arrayDeArrays) {\n    const volt = [], current = [], time = [];\n\n    for (const objeto of arrayDeArrays) {\n        volt.push(objeto.volt);\n        current.push(objeto.current);\n        time.push(objeto.time)\n    }\n    return [volt, current, time]\n}\n\nfunction obtenerHoraYMinutos(timestamp) {\n    const fecha = new Date(timestamp);\n    const horas = fecha.getHours();\n    const minutos = fecha.getMinutes();\n    return `${horas.toString().padStart(2, '0')}:${minutos.toString().padStart(2, '0')}`;\n}\n\nconst master = set_chart_values(msg.payload[0])\nconst slave = set_chart_values(msg.payload[1])\n\nmsg.payload=[{\n    \"series\": [\"volt\", \"current\" ],\n    \"data\": [ master[0], master[1] ],\n    \"labels\": master[2]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 440,
        "wires": [
            [
                "44f274b32a5521f6"
            ]
        ]
    },
    {
        "id": "0226e4b052c6765c",
        "type": "ui_button",
        "z": "1b5f67f7ad635077",
        "name": "",
        "group": "070aacdfb3088368",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Search",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "user_module",
        "topicType": "flow",
        "x": 120,
        "y": 500,
        "wires": [
            [
                "2461d59387e81e70"
            ]
        ]
    },
    {
        "id": "544c25cc5768ce35",
        "type": "ui_dropdown",
        "z": "1b5f67f7ad635077",
        "name": "",
        "label": "Modulos",
        "tooltip": "",
        "place": "Select option",
        "group": "070aacdfb3088368",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "ALL PACKS",
                "value": 47,
                "type": "num"
            },
            {
                "label": "PACK 1",
                "value": 39,
                "type": "num"
            },
            {
                "label": "PACK 2",
                "value": 40,
                "type": "num"
            },
            {
                "label": "PACK 3",
                "value": 41,
                "type": "num"
            },
            {
                "label": "PACK 4",
                "value": 42,
                "type": "num"
            },
            {
                "label": "PACK 5",
                "value": 43,
                "type": "num"
            },
            {
                "label": "PACK 6",
                "value": 44,
                "type": "num"
            },
            {
                "label": "PACK 7",
                "value": 45,
                "type": "num"
            },
            {
                "label": "PACK 8",
                "value": 46,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 920,
        "y": 340,
        "wires": [
            [
                "9f29e3120982b9fc"
            ]
        ]
    },
    {
        "id": "9f1636ab8f4039d1",
        "type": "change",
        "z": "1b5f67f7ad635077",
        "name": "set_user_time_context",
        "rules": [
            {
                "t": "set",
                "p": "user_time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "9f29e3120982b9fc",
        "type": "change",
        "z": "1b5f67f7ad635077",
        "name": "set_user_module_context",
        "rules": [
            {
                "t": "set",
                "p": "user_module",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "2d5929cd23d4dcd3",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "module_chart_data",
        "func": "function set_chart_values(arrayDeArrays) {\n    const soc = [], time = []\n\n    for (const objeto of arrayDeArrays) {\n        soc.push(objeto.soc)\n        time.push(objeto.time)\n    }\n    return [soc, time]\n}\n\nfunction obtenerHoraYMinutos(timestamp) {\n    const fecha = new Date(timestamp);\n    const horas = fecha.getHours();\n    const minutos = fecha.getMinutes();\n    return `${horas.toString().padStart(2, '0')}:${minutos.toString().padStart(2, '0')}`;\n}\n\nconst user_module = set_chart_values(msg.payload)\n\nmsg.payload=[{\n    \"series\": [\"volt\"],\n    \"data\": [user_module[0]],\n    \"labels\": user_module[1]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 580,
        "wires": [
            [
                "44f274b32a5521f6"
            ]
        ]
    },
    {
        "id": "544423434b006518",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "find_rack_query",
        "func": "const query = [{ time: { $gte: msg.payload[0], $lte: msg.payload[1]} }]\nmsg.payload = query\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 440,
        "wires": [
            [
                "30972578ddc90719"
            ]
        ]
    },
    {
        "id": "30972578ddc90719",
        "type": "mongodb4",
        "z": "1b5f67f7ad635077",
        "clientNode": "53913cc9c594968b",
        "mode": "collection",
        "collection": "datos",
        "operation": "find",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "find_general",
        "x": 890,
        "y": 440,
        "wires": [
            [
                "66c836030df5f49a",
                "1461699dd230f685"
            ]
        ]
    },
    {
        "id": "7062a1ef523f97a1",
        "type": "switch",
        "z": "1b5f67f7ad635077",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "47",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 500,
        "wires": [
            [
                "544423434b006518"
            ],
            [
                "f73f52b903328274"
            ]
        ]
    },
    {
        "id": "aca79a9b73e5e46a",
        "type": "debug",
        "z": "1b5f67f7ad635077",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 500,
        "wires": []
    },
    {
        "id": "e3ea095958a28e60",
        "type": "ui_table",
        "z": "1b5f67f7ad635077",
        "group": "070aacdfb3088368",
        "name": "Registro de Alarmas",
        "order": 4,
        "width": 0,
        "height": 0,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 180,
        "y": 740,
        "wires": []
    },
    {
        "id": "bb1fa1246c6d00e6",
        "type": "debug",
        "z": "1b5f67f7ad635077",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 160,
        "wires": []
    },
    {
        "id": "d8bb605fc70b7a21",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "get_module_alarms",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "ce890027948a481c",
        "type": "switch",
        "z": "1b5f67f7ad635077",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1370,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "1b159a12a677bf73",
        "type": "e-mail",
        "z": "1b5f67f7ad635077",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": false,
        "name": "xavier.garrigos.tempelgroup@gmail.com",
        "dname": "",
        "x": 540,
        "y": 700,
        "wires": []
    }
]
