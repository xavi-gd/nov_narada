[
    {
        "id": "1b5f67f7ad635077",
        "type": "tab",
        "label": "server",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "53913cc9c594968b",
        "type": "mongodb4-client",
        "name": "",
        "protocol": "mongodb",
        "hostname": "localhost",
        "port": "27017",
        "dbName": "narada",
        "appName": "",
        "authSource": "",
        "authMechanism": "DEFAULT",
        "tls": false,
        "tlsCAFile": "",
        "tlsCertificateKeyFile": "",
        "tlsInsecure": false,
        "connectTimeoutMS": "30000",
        "socketTimeoutMS": "0",
        "minPoolSize": "0",
        "maxPoolSize": "100",
        "maxIdleTimeMS": "0",
        "uri": "",
        "advanced": "{}",
        "uriTabActive": "tab-uri-simple"
    },
    {
        "id": "2a94dcf4a197c16a",
        "type": "ui_tab",
        "name": "Tempel Group",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d95c983f646cd4c2",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#808285",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#ffffff",
                    "value": "#808285",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#000000",
                    "edited": true
                },
                "page-backgroundColor": {
                    "value": "#e6e6e6",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#808285",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#808285",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#000000",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#000000",
                    "edited": true
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Tempel Group",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "icon",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 15,
                "gy": 15,
                "cx": 3,
                "cy": 3,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "070aacdfb3088368",
        "type": "ui_group",
        "name": "Fecha y Hora",
        "tab": "2a94dcf4a197c16a",
        "order": 1,
        "disp": true,
        "width": 5,
        "collapse": false,
        "className": ""
    },
    {
        "id": "b3b18b46f769a03f",
        "type": "ui_group",
        "name": "Valores Generales",
        "tab": "2a94dcf4a197c16a",
        "order": 2,
        "disp": true,
        "width": 18,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3ad2bc4a7ed3c9a3",
        "type": "ui_group",
        "name": "Default",
        "tab": "22c859d636852368",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "22c859d636852368",
        "type": "ui_tab",
        "name": "Away",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "63d44542e6e1ae80",
        "type": "ui_group",
        "name": "Logs",
        "tab": "2a94dcf4a197c16a",
        "order": 4,
        "disp": true,
        "width": 9,
        "collapse": false,
        "className": ""
    },
    {
        "id": "930ebe0a3aa3b551",
        "type": "ui_group",
        "name": "Valores Celdas",
        "tab": "2a94dcf4a197c16a",
        "order": 3,
        "disp": true,
        "width": 18,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d0f7f1ce1865f46f",
        "type": "tcp in",
        "z": "1b5f67f7ad635077",
        "name": "server",
        "server": "server",
        "host": "",
        "port": "12345",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "8a4b7b641fcecfc8"
            ]
        ]
    },
    {
        "id": "8a4b7b641fcecfc8",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "toASCII",
        "func": "msg.payload = msg.payload.toString(\"ascii\")\n\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 220,
        "wires": [
            [
                "36c120148f84e607"
            ]
        ]
    },
    {
        "id": "36c120148f84e607",
        "type": "json",
        "z": "1b5f67f7ad635077",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 650,
        "y": 260,
        "wires": [
            [
                "0cfb97fd869df32a",
                "94071b19ccea0111"
            ]
        ]
    },
    {
        "id": "04f86d401dec1ed2",
        "type": "mongodb4",
        "z": "1b5f67f7ad635077",
        "clientNode": "53913cc9c594968b",
        "mode": "collection",
        "collection": "datos",
        "operation": "insertMany",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 890,
        "y": 380,
        "wires": [
            [
                "0226e4b052c6765c"
            ]
        ]
    },
    {
        "id": "0cfb97fd869df32a",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "insert_DB_format",
        "func": "msg.payload = [[...msg.payload]];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 380,
        "wires": [
            [
                "04f86d401dec1ed2"
            ]
        ]
    },
    {
        "id": "b796a07a4e821e35",
        "type": "change",
        "z": "1b5f67f7ad635077",
        "name": "set_user_date_flow",
        "rules": [
            {
                "t": "set",
                "p": "user_date_ts",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "44b857a76e07d658",
        "type": "mongodb4",
        "z": "1b5f67f7ad635077",
        "clientNode": "53913cc9c594968b",
        "mode": "collection",
        "collection": "datos",
        "operation": "find",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 710,
        "y": 540,
        "wires": [
            [
                "f9aa32fd91fe5564",
                "5e91f5f1e9171fc5",
                "c603d66b521593dd",
                "30521c95c7095b1a"
            ]
        ]
    },
    {
        "id": "2461d59387e81e70",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "time_range",
        "func": "const user_date_ts = flow.get(\"user_date_ts\")\nconst user_date = new Date(user_date_ts)\n\nconst user_option = msg.topic\nlet am_limit_ts, pm_limit_ts\n\nswitch (flow.get(\"user_time\")) {\n  case 1:\n    am_limit_ts = user_date.setHours(0,0,0)\n    pm_limit_ts = user_date.setHours(5,59,59)\n    break;\n  case 2:\n      am_limit_ts = user_date.setHours(6,0,0)\n      pm_limit_ts = user_date.setHours(11,59,59)\n    break;\n  case 3:\n      am_limit_ts = user_date.setHours(12,0,0)\n      pm_limit_ts = user_date.setHours(17,59,59)\n    break;\n  case 4:\n      am_limit_ts = user_date.setHours(18,0,0)\n      pm_limit_ts = user_date.setHours(23,59,59)\n}\n\nconst time_array = [am_limit_ts/1000, pm_limit_ts/1000]\nmsg.payload = time_array\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 540,
        "wires": [
            [
                "f73f52b903328274"
            ]
        ]
    },
    {
        "id": "f73f52b903328274",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "find_module_query",
        "func": "const user_module = parseInt(msg.topic, 10)\nconst query = [{ id: msg.topic, time: { $gte: msg.payload[0], $lte: msg.payload[1]} }]\nmsg.payload = query\n\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 540,
        "wires": [
            [
                "44b857a76e07d658"
            ]
        ]
    },
    {
        "id": "aaafe02e3461177a",
        "type": "ui_dropdown",
        "z": "1b5f67f7ad635077",
        "name": "",
        "label": "Hora",
        "tooltip": "",
        "place": "Select option",
        "group": "070aacdfb3088368",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "00:00 - 05:59",
                "value": 1,
                "type": "num"
            },
            {
                "label": "06:00 - 11:59",
                "value": 2,
                "type": "num"
            },
            {
                "label": "12:00 - 17:59",
                "value": 3,
                "type": "num"
            },
            {
                "label": "18:00 - 23:59",
                "value": 4,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 510,
        "y": 60,
        "wires": [
            [
                "9f1636ab8f4039d1"
            ]
        ]
    },
    {
        "id": "61a19e2c204088a3",
        "type": "ui_date_picker",
        "z": "1b5f67f7ad635077",
        "name": "",
        "label": "Fecha",
        "group": "070aacdfb3088368",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "b796a07a4e821e35"
            ]
        ]
    },
    {
        "id": "1461699dd230f685",
        "type": "ui_table",
        "z": "1b5f67f7ad635077",
        "group": "b3b18b46f769a03f",
        "name": "Tabla Modulos",
        "order": 2,
        "width": 18,
        "height": 6,
        "columns": [
            {
                "field": "time",
                "title": "Time",
                "width": "70",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "volt",
                "title": "V",
                "width": "45",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "current",
                "title": "A",
                "width": "45",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "soc",
                "title": "SOC",
                "width": "65",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "soh",
                "title": "SOH",
                "width": "65",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "env_temp",
                "title": "Temp",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "avg_cell_temp",
                "title": "Cell T",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "protection_flag",
                "title": "Protection",
                "width": "",
                "align": "left",
                "formatter": "traffic",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "remain_capacity",
                "title": "remain cap",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "charge_time",
                "title": "Carga",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "discharge_time",
                "title": "Desc",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1420,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "0226e4b052c6765c",
        "type": "ui_button",
        "z": "1b5f67f7ad635077",
        "name": "",
        "group": "070aacdfb3088368",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Buscar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "user_module",
        "topicType": "flow",
        "x": 120,
        "y": 540,
        "wires": [
            [
                "2461d59387e81e70"
            ]
        ]
    },
    {
        "id": "544c25cc5768ce35",
        "type": "ui_dropdown",
        "z": "1b5f67f7ad635077",
        "name": "",
        "label": "Modulos",
        "tooltip": "seleccionar modulo",
        "place": "Select option",
        "group": "070aacdfb3088368",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Todos",
                "value": 37,
                "type": "num"
            },
            {
                "label": "Modulo 1",
                "value": 39,
                "type": "num"
            },
            {
                "label": "Modulo 2",
                "value": 40,
                "type": "num"
            },
            {
                "label": "Modulo 3",
                "value": 41,
                "type": "num"
            },
            {
                "label": "Modulo 4",
                "value": 42,
                "type": "num"
            },
            {
                "label": "Modulo 5",
                "value": 43,
                "type": "num"
            },
            {
                "label": "Modulo 6",
                "value": 44,
                "type": "num"
            },
            {
                "label": "Modulo 7",
                "value": 45,
                "type": "num"
            },
            {
                "label": "Modulo 8",
                "value": 46,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 920,
        "y": 60,
        "wires": [
            [
                "9f29e3120982b9fc"
            ]
        ]
    },
    {
        "id": "9f1636ab8f4039d1",
        "type": "change",
        "z": "1b5f67f7ad635077",
        "name": "set_user_time_flow",
        "rules": [
            {
                "t": "set",
                "p": "user_time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "9f29e3120982b9fc",
        "type": "change",
        "z": "1b5f67f7ad635077",
        "name": "set_user_module_flow",
        "rules": [
            {
                "t": "set",
                "p": "user_module",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "e3ea095958a28e60",
        "type": "ui_table",
        "z": "1b5f67f7ad635077",
        "group": "63d44542e6e1ae80",
        "name": "Tabla Protecciones",
        "order": 1,
        "width": 9,
        "height": 6,
        "columns": [
            {
                "field": "time",
                "title": "Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "id",
                "title": "ID",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "protection_flag",
                "title": "Protection",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1750,
        "y": 500,
        "wires": []
    },
    {
        "id": "d8bb605fc70b7a21",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "set_module_alarms",
        "func": "let module_alarms = msg.payload.map(({ time, id, protection_flag }) => ({ time, id, protection_flag }));\n\nmsg.payload = module_alarms\n\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 260,
        "wires": [
            [
                "bb2f5f81325c3433"
            ]
        ]
    },
    {
        "id": "1b159a12a677bf73",
        "type": "e-mail",
        "z": "1b5f67f7ad635077",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": false,
        "name": "xavier.garrigos.tempelgroup@gmail.com",
        "dname": "",
        "x": 1100,
        "y": 960,
        "wires": []
    },
    {
        "id": "94071b19ccea0111",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "obj_array",
        "func": "msg.payload = [...msg.payload];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 260,
        "wires": [
            [
                "21e32e0ac649e517"
            ]
        ]
    },
    {
        "id": "f9aa32fd91fe5564",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "timestamp_to_time",
        "func": "msg.payload.forEach(module => {\n    let fecha = new Date(module.time * 1000);\n    let horas = (\"0\" + fecha.getHours()).slice(-2); \n    let minutos = (\"0\" + fecha.getMinutes()).slice(-2); \n    module.time = horas + \":\" + minutos; \n  })\n\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 600,
        "wires": [
            [
                "1461699dd230f685",
                "a2d54372103430a0",
                "c3c411e9be05f2d9",
                "d13b4d58489d4a3d"
            ]
        ]
    },
    {
        "id": "21e32e0ac649e517",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "timestamp_to_date",
        "func": "msg.payload.forEach(module => {\n    let fecha = new Date(module.time * 1000)\n    let day = (\"0\" + fecha.getDate()).slice(-2)\n    let month = (\"0\" + (fecha.getMonth() + 1)).slice(-2)\n    let year = fecha.getFullYear()\n    let hours = (\"0\" + fecha.getHours()).slice(-2)\n    let minutes = (\"0\" + fecha.getMinutes()).slice(-2)\n      \n    module.time = `${hours}:${minutes} ${day}/${month}/${year}`\n  })\n\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 260,
        "wires": [
            [
                "4fa49c9bbfe372a0"
            ]
        ]
    },
    {
        "id": "bb2f5f81325c3433",
        "type": "change",
        "z": "1b5f67f7ad635077",
        "name": "set_module_alarms_context",
        "rules": [
            {
                "t": "set",
                "p": "module_alarms",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 260,
        "wires": [
            [
                "8dd684cd3bd7a538"
            ]
        ]
    },
    {
        "id": "a2d54372103430a0",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "module_chart_data",
        "func": "function set_chart_values(arrayDeArrays) {\n    const soc = [], soh = [], time = []\n\n    for (const objeto of arrayDeArrays) {\n        soc.push(objeto.soc)\n        soh.push(objeto.soh)\n        time.push(objeto.time)\n    }\n    return [soc, soh, time]\n}\n\nconst user_module = set_chart_values(msg.payload)\n\nmsg.payload=[{\n    \"series\": [\"SOC\", \"SOH\"],\n    \"data\": [user_module[0], user_module[1]],\n    \"labels\": [...user_module[2]]\n}]\n\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 660,
        "wires": [
            [
                "02fbaa95f0aee342"
            ]
        ]
    },
    {
        "id": "284ffcdc80879529",
        "type": "ui_template",
        "z": "1b5f67f7ad635077",
        "d": true,
        "group": "3ad2bc4a7ed3c9a3",
        "name": "top-bar logo",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n    #top-bar-logo {\n    background-image: url(https://fenie.es/patrocinador/tempel-group/);\n    background-size: contain;\n    background-repeat: no-repeat;\n    background-position: left;\n    height: 100%;\n    width: 100%;\n}\n</style>\n\n<script id=\"logo-script\" type=\"text/javascript\">\nfunction build(){\n    $(\"#top-bar-logo\").remove()\n    var logo = $('<div />').attr(\"id\",\"top-bar-logo\");\n    var topbar = $('.md-toolbar-tools');\n    topbar.append(logo)\n}\nfunction checkExistence(){\n    console.log($(\"#top-bar-logo\"))\n    if($(\"#top-bar-logo\").length > 0){\n        return\n    }\n    build()\n    setTimeout(checkExistence,100)\n}\n\nbuild()\nsetTimeout(checkExistence,100)\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 130,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "02fbaa95f0aee342",
        "type": "ui_chart",
        "z": "1b5f67f7ad635077",
        "name": "Grafica SOC y SOH",
        "group": "b3b18b46f769a03f",
        "order": 1,
        "width": 18,
        "height": 6,
        "label": "SOC vs SOH",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#2ca02c",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1440,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "4fa49c9bbfe372a0",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "pop",
        "func": "msg.payload.pop()\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 260,
        "wires": [
            [
                "d8bb605fc70b7a21"
            ]
        ]
    },
    {
        "id": "0b82e01e401b5d92",
        "type": "file",
        "z": "1b5f67f7ad635077",
        "name": "",
        "filename": "C:\\Users\\BATECNIC01\\Desktop\\logs.txt",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1820,
        "y": 420,
        "wires": [
            [
                "e3ea095958a28e60"
            ]
        ]
    },
    {
        "id": "8dd684cd3bd7a538",
        "type": "file in",
        "z": "1b5f67f7ad635077",
        "name": "",
        "filename": "C:\\Users\\BATECNIC01\\Desktop\\logs.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1960,
        "y": 260,
        "wires": [
            [
                "4055d95245713a0d"
            ]
        ]
    },
    {
        "id": "4055d95245713a0d",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "ger_module_alarms",
        "func": "let final = []\nlet antiguos_str = msg.payload\nlet nuevos = flow.get(\"module_alarms\")\n\nif (antiguos_str !== '') {\n    let antiguos = JSON.parse(antiguos_str)\n    final.push(...antiguos)\n    final.push(...nuevos) \n} else {\n    final.push(...nuevos)\n    flow.set(\"module_alarms\", final)\n}\n\nmsg.payload = final\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1760,
        "y": 340,
        "wires": [
            [
                "0b82e01e401b5d92"
            ]
        ]
    },
    {
        "id": "09c4108a4d798d5a",
        "type": "yaml",
        "z": "1b5f67f7ad635077",
        "property": "payload",
        "name": "",
        "x": 570,
        "y": 780,
        "wires": [
            [
                "45d2d6c1c0caaba1"
            ]
        ]
    },
    {
        "id": "621356eac826751c",
        "type": "ui_button",
        "z": "1b5f67f7ad635077",
        "name": "",
        "group": "63d44542e6e1ae80",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Exportar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "export_module",
        "payloadType": "flow",
        "topic": "user_module",
        "topicType": "flow",
        "x": 120,
        "y": 780,
        "wires": [
            [
                "21df56237681939c",
                "50cb6eb127d58cdd"
            ]
        ]
    },
    {
        "id": "5e91f5f1e9171fc5",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "timestamp_to_date",
        "func": "msg.payload.forEach(module => {\n    let fecha = new Date(module.time * 1000)\n    let day = (\"0\" + fecha.getDate()).slice(-2)\n    let month = (\"0\" + (fecha.getMonth() + 1)).slice(-2)\n    let year = fecha.getFullYear()\n    let hours = (\"0\" + fecha.getHours()).slice(-2)\n    let minutes = (\"0\" + fecha.getMinutes()).slice(-2)\n      \n    module.time = `${hours}:${minutes} ${day}/${month}/${year}`\n  })\n\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 480,
        "wires": [
            [
                "eeecfe4cc6c6426b"
            ]
        ]
    },
    {
        "id": "eeecfe4cc6c6426b",
        "type": "change",
        "z": "1b5f67f7ad635077",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "export_module",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "45d2d6c1c0caaba1",
        "type": "file",
        "z": "1b5f67f7ad635077",
        "name": "",
        "filename": "C:\\Users\\BATECNIC01\\Desktop\\export_module.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 870,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "21df56237681939c",
        "type": "change",
        "z": "1b5f67f7ad635077",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload[0]._id",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 780,
        "wires": [
            [
                "09c4108a4d798d5a"
            ]
        ]
    },
    {
        "id": "4b6e8f0721ad2a10",
        "type": "ui_switch",
        "z": "1b5f67f7ad635077",
        "name": "",
        "label": "Celdas",
        "tooltip": "",
        "group": "070aacdfb3088368",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1360,
        "y": 60,
        "wires": [
            [
                "15e4c0ef2bd1ac0a"
            ]
        ]
    },
    {
        "id": "9e995929a4369842",
        "type": "ui_table",
        "z": "1b5f67f7ad635077",
        "group": "930ebe0a3aa3b551",
        "name": "Tabla Voltajes",
        "order": 1,
        "width": 18,
        "height": 6,
        "columns": [
            {
                "field": "time",
                "title": "Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "1",
                "title": "1",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "2",
                "title": "2",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "3",
                "title": "3",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "4",
                "title": "4",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "5",
                "title": "5",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "6",
                "title": "6",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "7",
                "title": "7",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "8",
                "title": "8",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "9",
                "title": "9",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "10",
                "title": "10",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "11",
                "title": "11",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "12",
                "title": "12",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "13",
                "title": "13",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "14",
                "title": "14",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "15",
                "title": "15",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1420,
        "y": 720,
        "wires": []
    },
    {
        "id": "c3c411e9be05f2d9",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "function 2",
        "func": "const nuevoArray = msg.payload.map(item => {\n  const newObj = {};\n  \n  item.cell_volt.forEach((value, index) => {\n    if (index < 15) {\n      newObj[(index + 1).toString()] = value;\n    }\n  });\n  newObj.time = item.time;\n  return newObj;\n});\nmsg.payload = nuevoArray\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 720,
        "wires": [
            [
                "9e995929a4369842"
            ]
        ]
    },
    {
        "id": "d13b4d58489d4a3d",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "function 3",
        "func": "const nuevoArray = msg.payload.map(item => {\n  const newObj = {};\n  \n  item.cell_temp.forEach((value, index) => {\n    if (index < 15) {\n      newObj[(index + 1).toString()] = value;\n    }\n  });\n  newObj.time = item.time;\n  return newObj;\n});\nmsg.payload = nuevoArray\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 780,
        "wires": [
            [
                "420f3c80f7ef8510"
            ]
        ]
    },
    {
        "id": "420f3c80f7ef8510",
        "type": "ui_table",
        "z": "1b5f67f7ad635077",
        "group": "930ebe0a3aa3b551",
        "name": "Tabla Temperatura",
        "order": 2,
        "width": 18,
        "height": 6,
        "columns": [
            {
                "field": "time",
                "title": "Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "1",
                "title": "1",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "2",
                "title": "2",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "3",
                "title": "3",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "4",
                "title": "4",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "5",
                "title": "5",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "6",
                "title": "6",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "7",
                "title": "7",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "8",
                "title": "8",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "9",
                "title": "9",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "10",
                "title": "10",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "11",
                "title": "11",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "12",
                "title": "12",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "13",
                "title": "13",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "14",
                "title": "14",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "15",
                "title": "15",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1430,
        "y": 780,
        "wires": []
    },
    {
        "id": "15e4c0ef2bd1ac0a",
        "type": "change",
        "z": "1b5f67f7ad635077",
        "name": "set_user_cell_flow",
        "rules": [
            {
                "t": "set",
                "p": "user_cell",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "c603d66b521593dd",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "ON",
        "func": "const cell_on = {\n    \"group\": {\n        \"hide\": [\n            \"Tempel_Group_Valores_Generales\"\n        ],\n        \"show\": [\n            \"Tempel_Group_Valores_Celdas\"\n        ]\n    }\n}\n\nconst cell_of = {\n    \"group\": {\n        \"hide\": [\n            \"Tempel_Group_Valores_Celdas\"\n        ],\n        \"show\": [\n            \"Tempel_Group_Valores_Generales\"\n        ]\n    }\n}\n\nmsg.payload = (flow.get(\"user_cell\")) ? cell_on : cell_of\n\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 540,
        "wires": [
            [
                "dfd2626ff8695c2d"
            ]
        ]
    },
    {
        "id": "dfd2626ff8695c2d",
        "type": "ui_ui_control",
        "z": "1b5f67f7ad635077",
        "name": "",
        "events": "change",
        "x": 1400,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "50cb6eb127d58cdd",
        "type": "ui_text",
        "z": "1b5f67f7ad635077",
        "group": "63d44542e6e1ae80",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Nota Export",
        "label": "El fichero se guarda en el Escritorio:  ",
        "format": "export_module.txt",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 310,
        "y": 840,
        "wires": []
    },
    {
        "id": "30521c95c7095b1a",
        "type": "function",
        "z": "1b5f67f7ad635077",
        "name": "pop",
        "func": "msg.payload.pop()\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 660,
        "wires": [
            [
                "d6b45235fd1263f9",
                "4cc95f49edf2d78e",
                "85bcb707a498d58f",
                "f7d42bf4151c8c6d"
            ]
        ]
    },
    {
        "id": "d6b45235fd1263f9",
        "type": "ui_text",
        "z": "1b5f67f7ad635077",
        "group": "63d44542e6e1ae80",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Modelo",
        "format": "{{payload[0].model}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 960,
        "y": 660,
        "wires": []
    },
    {
        "id": "4cc95f49edf2d78e",
        "type": "ui_text",
        "z": "1b5f67f7ad635077",
        "group": "63d44542e6e1ae80",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Version",
        "format": "{{payload[0].version}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 960,
        "y": 700,
        "wires": []
    },
    {
        "id": "85bcb707a498d58f",
        "type": "ui_text",
        "z": "1b5f67f7ad635077",
        "group": "63d44542e6e1ae80",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Numero de Serie",
        "format": "{{payload[0].serial_number}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 990,
        "y": 740,
        "wires": []
    },
    {
        "id": "f7d42bf4151c8c6d",
        "type": "ui_text",
        "z": "1b5f67f7ad635077",
        "group": "63d44542e6e1ae80",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Serial Number",
        "format": "{{payload[0].manufacture_date}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 980,
        "y": 820,
        "wires": []
    }
]
